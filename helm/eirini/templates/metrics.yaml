{{- if .Values.opi.metrics.enable }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "eirini-metrics"
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      name: "eirini-metrics"
  template:
    metadata:
      labels:
        name: "eirini-metrics"
    spec:
      dnsPolicy: "ClusterFirst"
      serviceAccountName: "eirini-metrics"
      volumes:
        - name: config-map-volume
          configMap:
            name: "eirini"
            items:
            - key: metrics.yml
              path: metrics.yml
        - name: cf-secrets
          projected:
            sources:
            - secret:
                name: "{{ .Values.opi.metrics.tls.client.secretName }}"
                items:
                - key: "{{ .Values.opi.metrics.tls.client.certPath }}"
                  path: tls.crt
                - key: "{{ .Values.opi.metrics.tls.client.keyPath }}"
                  path: tls.key
            - secret:
                name: "{{ .Values.opi.metrics.tls.server.secretName }}"
                items:
                - key: "{{ .Values.opi.metrics.tls.server.caPath }}"
                  path: ca.crt
      securityContext:
        runAsNonRoot: true
      containers:
      - name: metrics-collector
        {{- if .Values.opi.metrics_collector_image }}
        image: {{ .Values.opi.metrics_collector_image }}
        {{- else }}
        image: eirini/metrics-collector@{{ .Files.Get "versions/metrics-collector" }}
        {{- end }}
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: config-map-volume
          mountPath: /etc/eirini-metrics/config
        - name: cf-secrets
          mountPath: /etc/loggregator/certs
        resources:
          requests:
            cpu: {{ .Values.kube.resources.metrics.requests.cpu }}
            memory: {{ .Values.kube.resources.metrics.requests.memory }}
          limits:
            cpu: {{ .Values.kube.resources.metrics.limits.cpu }}
            memory: {{ .Values.kube.resources.metrics.limits.memory }}
{{- end }}
