---
apiVersion: rbac.authorization.k8s.io/v1
{{- if .Values.opi.enable_multi_namespace_support }}
kind: ClusterRole
{{- else }}
kind: Role
{{- end }}
metadata:
  name: eirini-resource-role
  {{- if not .Values.opi.enable_multi_namespace_support }}
  namespace: {{ .Values.opi.namespace }}
  {{- end }}
rules:
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - list
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - create
  - update
  - delete
  - list
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - list
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
  - delete
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete

---
# Bind to the default service account
apiVersion: rbac.authorization.k8s.io/v1
{{- if .Values.opi.enable_multi_namespace_support }}
kind: ClusterRoleBinding
{{- else }}
kind: RoleBinding
{{- end }}
metadata:
  name: eirini-resource-rolebinding
  {{- if not .Values.opi.enable_multi_namespace_support }}
  namespace: {{ .Values.opi.namespace }}
  {{- end }}
roleRef:
  {{- if .Values.opi.enable_multi_namespace_support }}
  kind: ClusterRole
  {{- else }}
  kind: Role
  {{- end }}
  name: eirini-resource-role
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: opi
  namespace: {{ .Release.Namespace }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: eirini-psp-role
  namespace: {{ .Release.Namespace }}
rules:
- apiGroups:
  - policy
  resources:
  - podsecuritypolicies
  verbs:
  - use
  resourceNames:
  - eirini

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: eirini-psp-rolebinding
  namespace: {{ .Release.Namespace }}
roleRef:
  kind: Role
  name: eirini-psp-role
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: opi
  namespace: {{ .Release.Namespace }}
- kind: ServiceAccount
  name: eirini-secret-smuggler
  namespace: {{ .Release.Namespace }}

---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: eirini
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'runtime/default'
    seccomp.security.alpha.kubernetes.io/defaultProfileName:  'runtime/default'
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'MustRunAsNonRoot'
  seLinux:
    # This policy assumes the nodes are using AppArmor rather than SELinux.
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      # Forbid adding the root group.
      - min: 1
        max: 65535
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      # Forbid adding the root group.
      - min: 1
        max: 65535
  readOnlyRootFilesystem: false
