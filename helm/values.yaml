api:
  # registry_secret_name is the name of the secret containing the docker
  # credentials to pull LRP images
  registry_secret_name: registry-credentials

  # unsafe_allow_automount_service_account_token when set to true causes
  # Kubernetes to mount the service account token in the LRP and task
  # containers. This gives the code running there access to the Kubernetes
  # API with the privileges of the application service account.
  #
  # This should generally be left as the default false unless there is a
  # good reason and the implications are understood. It is required when
  # running cf-for-k8s in a kind cluster, for example.
  unsafe_allow_automount_service_account_token: false

  # tls_port is the port used by Eirini to serve its REST API over HTTPS
  # Required when serve_plaintext is set to false or omitted.
  tls_port: 8085

  # plaintext_port is the port used by Eirini to serve its REST API over
  # plain HTTP.  Required when serve_plaintext is set to true.
  plaintext_port: 8080

  # serve_plaintext specifies whether the Eirini REST API should be served
  # over plain HTTP or not.
  #
  # When serve_plaintext is false, which is the default, a secret must be
  # provided for the eirini-certs volume in core/api-deployment.yml. This
  # must have entries tls.ca, tls.crt and tls.key, for the TLS certificate
  # authority, certificate and key respectively, used to serve TLS.
  serve_plaintext: true

  # tls_secret_name is required when opi.cc_tls_disabled is false in the
  # core/api-configmap.yml. It must have keys tls.ca, tls.crt and tls.key for
  # the certificate authority, client certificate and private key respectively,
  # used for mTLS with the Cloud Controller.
  tls_secret_name: eirini-internal-tls-certs

  # prometheus_port is the port used to expose Prometheus metrics. When set
  # to 0, the metrics endpoint is disabled.
  prometheus_port: 8080

tasks:
  # completion_callback_retry_limit is the number of times Eirini will retry
  # to call the Cloud Controller completion callback in case the Cloud
  # Controller is unreachable.
  completion_callback_retry_limit: 10

  # ttl_seconds is the number of seconds Eirini will wait before deleting the
  # Job associated to a completed Task.
  ttl_seconds: 5

workloads:
    # default_namespace is the namespace used by Eirini to deploy LRPs that do
    # not specify their own namespace in the request.
    default_namespace: cf-workloads

    namespaces: []
    create_namespaces: false

cc_api:
  # host is the host used by Eirini to call the Cloud Controller.
  host: "capi.cf-system.svc.cluster.local"

  # port is the port used by Eirini to call the Cloud Controller.
  port: 9023

  # scheme is the URL scheme used by Eirini to call the Cloud Controller.
  scheme: http

  # tls_disabled specifies wether Eirini should communicate to the Cloud
  # Controller via HTTPS or not. This should be set to false if TLS is handled
  # transparently, e.g. by a service mesh.
  #
  # When tls_disabled is false, which is the default, a secret must be provided
  # for the cc-certs volume via tls_secret_name. This must have entries tls.ca,
  # tls.crt and tls.key, for the TLS certificate authority, client certificate
  # and key respectively, used for mTLS with the Cloud Controller.
  tls_disabled: false

  # tls_secret_name is required when opi.cc_tls_disabled is false in the
  # core/api-configmap.yml. It must have keys tls.ca, tls.crt and tls.key for
  # the certificate authority, client certificate and private key respectively,
  # used for mTLS with the Cloud Controller.
  tls_secret_name: eirini-internal-tls-certs

routing:
  nats:
    # host is the host used by Eirini to publish route updates via NATS.
    host: "nats-client.cf-system.svc.cluster.local"

    # port is the port used by Eirini to publish route updates via NATS.
    port: 4222

    # secret_name is the name of the k8s secret holding the NATS password
    secret_name: nats-secret

    # password_key is the name of the key containing the NATS password in the
    # above secret
    password_key: nats-password

metrics:
  loggregator:
    # host is the host used by Eirini to push metrics to loggregator
    host: "doppler.cf-system.svc.cluster.local"

    # port is the port used by Eirini to push metrics to loggregator
    port: 8082

instance_index_env_injector:
  certs_secret_name: instance-index-env-injector-certs

images:
    api: eirini/opi@sha256:f3c12e2430caf476f14f75239b6e05198d3b2f41b01f6ef5e3c0c747bed6977b
    eirini_controller: eirini/eirini-controller@sha256:100403c1bd7ed68a44a1a4c300dfc9753b7ba06395ebfb06dbba93140c4618e3
    instance_index_env_injector: eirini/instance-index-env-injector@sha256:5fa96e89e5f9fe7395cdf6ffd1536b7f233660e980b30c4c6f005d503dc0362f
    task_reporter: eirini/task-reporter@sha256:b6042938163dd001297e60a6cbb9e298f089e651fe6a6b2912a7c8616f0508e2
    event_reporter: eirini/event-reporter@sha256:21d0cde5f8bd2629bd651b8d93893348dfe3197bbe1537570861656a59c0ed40
    route_collector: eirini/route-collector@sha256:9c279def8ed599bfb629ba253df0565bc6c94abbbe8a5c200317501ac98f3bab
    route_pod_informer: eirini/route-pod-informer@sha256:488a082050e372817f6706464a1cf92b69c7ed2cc2049ed0fb949532d7495861
    route_statefulset_informer: eirini/route-statefulset-informer@sha256:fb9def50b4f275790330ad3bb1571835ea70d29c305c4d0e8b21232a1e469bff
    metrics_collector: eirini/metrics-collector@sha256:fc5903e2671bfbb43871ffcded119064c271e0d93babaa73d707667782dc8eff
