api:
  # registry_secret_name is the name of the secret containing the docker
  # credentials to pull LRP images
  registry_secret_name: app-registry-credentials

  # unsafe_allow_automount_service_account_token when set to true causes
  # Kubernetes to mount the service account token in the LRP and task
  # containers. This gives the code running there access to the Kubernetes
  # API with the privileges of the application service account.
  #
  # This should generally be left as the default false unless there is a
  # good reason and the implications are understood. It is required when
  # running cf-for-k8s in a kind cluster, for example.
  unsafe_allow_automount_service_account_token: false

  # tls_port is the port used by Eirini to serve its REST API over HTTPS
  # Required when serve_plaintext is set to false or omitted.
  tls_port: 8085

  # plaintext_port is the port used by Eirini to serve its REST API over
  # plain HTTP.  Required when serve_plaintext is set to true.
  plaintext_port: 8080

  # serve_plaintext specifies whether the Eirini REST API should be served
  # over plain HTTP or not.
  #
  # When serve_plaintext is false, which is the default, a secret must be
  # provided for the eirini-certs volume in core/api-deployment.yml. This
  # must have entries tls.ca, tls.crt and tls.key, for the TLS certificate
  # authority, certificate and key respectively, used to serve TLS.
  serve_plaintext: true

  # tls_secret_name is required when opi.cc_tls_disabled is false in the
  # core/api-configmap.yml. It must have keys tls.ca, tls.crt and tls.key for
  # the certificate authority, client certificate and private key respectively,
  # used for mTLS with the Cloud Controller.
  tls_secret_name: eirini-internal-tls-certs

  # prometheus_port is the port used to expose Prometheus metrics. When set
  # to 0, the metrics endpoint is disabled.
  prometheus_port: 8080

tasks:
  # completion_callback_retry_limit is the number of times Eirini will retry
  # to call the Cloud Controller completion callback in case the Cloud
  # Controller is unreachable.
  completion_callback_retry_limit: 10

  # ttl_seconds is the number of seconds Eirini will wait before deleting the
  # Job associated to a completed Task.
  ttl_seconds: 5

workloads:
    # default_namespace is the namespace used by Eirini to deploy LRPs that do
    # not specify their own namespace in the request.
    default_namespace: cf-workloads

    namespaces: []
    create_namespaces: false

cc_api:
  # host is the host used by Eirini to call the Cloud Controller.
  host: "capi.cf-system.svc.cluster.local"

  # port is the port used by Eirini to call the Cloud Controller.
  port: 9023

  # scheme is the URL scheme used by Eirini to call the Cloud Controller.
  scheme: http

  # tls_disabled specifies wether Eirini should communicate to the Cloud
  # Controller via HTTPS or not. This should be set to true if TLS is handled
  # transparently, e.g. by a service mesh.
  #
  # When tls_disabled is false, a secret must be provided for the cc-certs
  # volume via tls_secret_name. This must have entries tls.ca, tls.crt and
  # tls.key, for the TLS certificate authority, client certificate and key
  # respectively, used for mTLS with the Cloud Controller.
  tls_disabled: true

  # tls_secret_name is required when opi.cc_tls_disabled is false in the
  # core/api-configmap.yml. It must have keys tls.ca, tls.crt and tls.key for
  # the certificate authority, client certificate and private key respectively,
  # used for mTLS with the Cloud Controller.
  tls_secret_name: eirini-internal-tls-certs

routing:
  nats:
    # host is the host used by Eirini to publish route updates via NATS.
    host: "nats-client.cf-system.svc.cluster.local"

    # port is the port used by Eirini to publish route updates via NATS.
    port: 4222

    # secret_name is the name of the k8s secret holding the NATS password
    secret_name: nats-secret

    # password_key is the name of the key containing the NATS password in the
    # above secret
    password_key: nats-password

metrics:
  loggregator:
    # host is the host used by Eirini to push metrics to loggregator
    host: "doppler.cf-system.svc.cluster.local"

    # port is the port used by Eirini to push metrics to loggregator
    port: 8082

instance_index_env_injector:
  certs_secret_name: instance-index-env-injector-certs

images:
    api: eirini/opi@sha256:ae8c9b7cf38d8c384b4ba7327f40b469e1690c751e3b04a1fa0c1e83948a4420
    eirini_controller: eirini/eirini-controller@sha256:a0b550f8ae71f88e8ea1c4bb3f148b6f4aacea2d88afcee9f284f6232e17d75b
    instance_index_env_injector: eirini/instance-index-env-injector@sha256:b92465e6af82ef1b3bf531d82fc24e96a960fbc954d75dae8012bb28fba3abed
    task_reporter: eirini/task-reporter@sha256:1be14d57674cb545b54666474e250ad0c88bfbe5d1e8930b36d830dd1950ff67
    event_reporter: eirini/event-reporter@sha256:de5bb3ca424904eccb20b2b6d8a4d1a30144e91155dd712ec02d9b28b3b5ddd4
    route_collector: eirini/route-collector@sha256:bbf7742c1bc87819768ff1d76c571fab83d49e581fcbb4b9364a127ed30d22b4
    route_pod_informer: eirini/route-pod-informer@sha256:90874bcd55cc287c3f638dd2f854c962868c22053526232b49cc320197cd2796
    route_statefulset_informer: eirini/route-statefulset-informer@sha256:75eee78eb6491111a864428c511292e35d359e5ac56bf114702e7f0ebbea3a3f
    metrics_collector: eirini/metrics-collector@sha256:649e426bfc601614bb1f0f16273ab96a32607e8b8d48a0517dfb7e90ee0242a3
    migration: eirini/migration@sha256:d643d1ae5804a13479ce2abc7117545cc3341efbd9b42beca75b82fee63dd7c4
