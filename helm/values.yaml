api:
  # registry_secret_name is the name of the secret containing the docker
  # credentials to pull LRP images
  registry_secret_name: registry-credentials

  # unsafe_allow_automount_service_account_token when set to true causes
  # Kubernetes to mount the service account token in the LRP and task
  # containers. This gives the code running there access to the Kubernetes
  # API with the privileges of the application service account.
  #
  # This should generally be left as the default false unless there is a
  # good reason and the implications are understood. It is required when
  # running cf-for-k8s in a kind cluster, for example.
  unsafe_allow_automount_service_account_token: false

  # tls_port is the port used by Eirini to serve its REST API over HTTPS
  # Required when serve_plaintext is set to false or omitted.
  tls_port: 8085

  # plaintext_port is the port used by Eirini to serve its REST API over
  # plain HTTP.  Required when serve_plaintext is set to true.
  plaintext_port: 8080

  # serve_plaintext specifies whether the Eirini REST API should be served
  # over plain HTTP or not.
  #
  # When serve_plaintext is false, which is the default, a secret must be
  # provided for the eirini-certs volume in core/api-deployment.yml. This
  # must have entries tls.ca, tls.crt and tls.key, for the TLS certificate
  # authority, certificate and key respectively, used to serve TLS.
  serve_plaintext: true

  # tls_secret_name is required when opi.cc_tls_disabled is false in the
  # core/api-configmap.yml. It must have keys tls.ca, tls.crt and tls.key for
  # the certificate authority, client certificate and private key respectively,
  # used for mTLS with the Cloud Controller.
  tls_secret_name: eirini-internal-tls-certs

  # prometheus_port is the port used to expose Prometheus metrics. When set
  # to 0, the metrics endpoint is disabled.
  prometheus_port: 8080

tasks:
  # completion_callback_retry_limit is the number of times Eirini will retry
  # to call the Cloud Controller completion callback in case the Cloud
  # Controller is unreachable.
  completion_callback_retry_limit: 10

  # ttl_seconds is the number of seconds Eirini will wait before deleting the
  # Job associated to a completed Task.
  ttl_seconds: 5

workloads:
    # default_namespace is the namespace used by Eirini to deploy LRPs that do
    # not specify their own namespace in the request.
    default_namespace: cf-workloads

    namespaces: []
    create_namespaces: false

cc_api:
  # host is the host used by Eirini to call the Cloud Controller.
  host: "capi.cf-system.svc.cluster.local"

  # port is the port used by Eirini to call the Cloud Controller.
  port: 9023

  # scheme is the URL scheme used by Eirini to call the Cloud Controller.
  scheme: http

  # tls_disabled specifies wether Eirini should communicate to the Cloud
  # Controller via HTTPS or not. This should be set to false if TLS is handled
  # transparently, e.g. by a service mesh.
  #
  # When tls_disabled is false, which is the default, a secret must be provided
  # for the cc-certs volume via tls_secret_name. This must have entries tls.ca,
  # tls.crt and tls.key, for the TLS certificate authority, client certificate
  # and key respectively, used for mTLS with the Cloud Controller.
  tls_disabled: false

  # tls_secret_name is required when opi.cc_tls_disabled is false in the
  # core/api-configmap.yml. It must have keys tls.ca, tls.crt and tls.key for
  # the certificate authority, client certificate and private key respectively,
  # used for mTLS with the Cloud Controller.
  tls_secret_name: eirini-internal-tls-certs

routing:
  nats:
    # host is the host used by Eirini to publish route updates via NATS.
    host: "nats-client.cf-system.svc.cluster.local"

    # port is the port used by Eirini to publish route updates via NATS.
    port: 4222

    # secret_name is the name of the k8s secret holding the NATS password
    secret_name: nats-secret

    # password_key is the name of the key containing the NATS password in the
    # above secret
    password_key: nats-password

metrics:
  loggregator:
    # host is the host used by Eirini to push metrics to loggregator
    host: "doppler.cf-system.svc.cluster.local"

    # port is the port used by Eirini to push metrics to loggregator
    port: 8082

instance_index_env_injector:
  certs_secret_name: instance-index-env-injector-certs

images:
    api: eirini/opi@sha256:1ae4137458c51330f48f8916a10aa83d2a034cce36b36d1010f8157af418f611
    eirini_controller: eirini/eirini-controller@sha256:a11110c4158891576ac4b39710a4026acf3eb2c41a615f652cc69190e9cf7533
    instance_index_env_injector: eirini/instance-index-env-injector@sha256:89d2d6595a69e14e53c23d02cfa41fa2ba5cde2233180830e3f6bbf3c8669cdc
    task_reporter: eirini/task-reporter@sha256:32c8c98476c439700b4bd467caacd3cfc3805c864cb07c03e570656f2da6b1ca
    event_reporter: eirini/event-reporter@sha256:a912067d26d21883f906321ee5003d1811e5fac9e0284923cdb27bc14ff302ea
    route_collector: eirini/route-collector@sha256:6881de7cee72336c6a6dcc33c8086d267c7e158cefcf207145c74eacaaa187d3
    route_pod_informer: eirini/route-pod-informer@sha256:a377eb33e8cfd4f645d41d9f6f4cd51eafa67d94be5c9db612078009265781c9
    route_statefulset_informer: eirini/route-statefulset-informer@sha256:8c08585a1a5de0fafd4e214269246d49b90c2e975939ee9ca5734e91f91b9b31
    metrics_collector: eirini/metrics-collector@sha256:5ce3a38b35c8fc1526b48e9c3d134d3a699f68cfa7f1273147da986af1fd1539
